; SBRC

.ORG 0
.DEF MYREG = R16
.DEF COUNTREG = R20
.EQU FULL = 0xFF
.EQU ZERO = 0x00
.EQU ONE = 0b01
.EQU PINTRIG = 0b01
.EQU PIN_ECHO = 0b10
.EQU PINRELE = 0b100
.EQU PININ = PIND
.EQU PINOUT = PINB

MAIN:
	LDI COUNTREG, ZERO

	RCALL TRIG_LOW
	; DELAY 2 MICRO
	RCALL TRIG_HIGH
	; DELAY 10 MICRO
	
	RCALL TRIG_LOW
	
	RJMP WAIT_HIGH_LOOP
	
	RJMP MAIN
DELAY_US:

	; NOP - para compensar a carga do valor de R16 via LDI
	NOP
	NOP
	NOP
	NOP

SETUP:
LDI MYREG, ZERO
OUT DDRD, MYREG ;MAKE PORTD INPUT

LDI MYREG, FULL
OUT DDRB, MYREG ;MAKE PORTB OUTPUT


TRIG_LOW:
	LDI MYREG, ZERO
	OUT PINOUT, MYREG 

TRIG_HIGH:
	LDI MYREG, PINTRIG
	OUT PINOUT, MYREG 

WAIT_HIGH_LOOP:

	IN MYREG, PININ
	ldi r17, pin_echo

	AND MYREG, r17
	CPI MYREG, ZERO
	JMP WAIT_HIGH_LOOP
	JMP ECHO_LOW_LOOP
	 
	
DELAY_LOW_LOOP:

	RCALL DELAY_US
	RCALL DELAY_US
	RCALL DELAY_US
	RCALL DELAY_US
	RCALL DELAY_US
	RCALL DELAY_US
	RCALL DELAY_US
	RCALL DELAY_US
	RCALL DELAY_US
	RCALL DELAY_US

	INC COUNTREG
	JMP ECHO_LOW_LOOP


ECHO_LOW_LOOP:

	IN MYREG, PININ
	ldi r17, pin_echo

	AND MYREG, r17
	CPI MYREG, ZERO
	JMP DELAY_LOW_LOOP
	JMP ECHO_DONE

ECHO_DONE:
	LSR COUNTREG

	LDI R22, LOW(340)
	LDI R23, HIGH(340)

	LDI MYREG, 10
	CP R17, MYREG

	; Compara
	; Se menor que 10, liga rele
	; Se nao, desliga rele
	JMP MAIN



